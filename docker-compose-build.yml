version: "3"
services:
  master:
    image: lsqtzj/openeuler_open_gauss:${OPEN_GAUSS_VERSION}
    build:
      context: .
      dockerfile: openeuler_open_gauss/Dockerfile
    #restart: always
    container_name: master
    hostname: master
    networks:
      gauss:
        ipv4_address: 10.8.0.10
    ports:
      - 15432:5432
      - 8980:80
      - 8008:8008
    environment:
      TZ: Europe/Rome #Asia/Shanghai 时区
      NODE_NAME: datanode1
      RUN_MODE: "master"  # 主机模式 "master"/"slave" | patroni 服务版本只用于首次设置，Leader 机由patroni进行控制
      GAUSS_USER: ${GAUSS_USER}   # 远程管理员
      GAUSS_PASSWORD: ${GAUSS_PASSWORD} # 密码
      HOST_NAMES: ${HOST_NAMES} # 主机列表
      HOST_IPS: ${HOST_IPS}
      GAUSS_DATABASE: test # 初始化数据库 \c 切换数据库 要输入密码，所以加这个参数用来创建数据库
    volumes:
      - ./data/master/data:/opt/software/openGauss/data      
      - ./data/master/logs:/opt/software/openGauss/logs
      - ./test.sql:/docker-entrypoint-initdb.d/test.sql # 初始化数据表

  slave01:
    image: lsqtzj/openeuler_open_gauss:${OPEN_GAUSS_VERSION}
    build:
      context: .
      dockerfile: openeuler_open_gauss/Dockerfile
    #restart: always
    container_name: slave01
    hostname: slave01
    networks:
      gauss:
        ipv4_address: 10.8.0.11
    environment:
      TZ: Europe/Rome #Asia/Shanghai 时区
      GAUSS_USER: ${GAUSS_USER}
      GAUSS_PASSWORD: ${GAUSS_PASSWORD}
      NODE_NAME: datanode2
      RUN_MODE: "slave"
      HOST_NAMES: ${HOST_NAMES}
      HOST_IPS: ${HOST_IPS}
    volumes:
      - ./data/slave01/data:/opt/software/openGauss/data      
      - ./data/slave01/logs:/opt/software/openGauss/logs
    depends_on:
      - master

  slave02:
    image: lsqtzj/openeuler_open_gauss:${OPEN_GAUSS_VERSION}
    build:
      context: .
      dockerfile: openeuler_open_gauss/Dockerfile
    #restart: always
    container_name: slave02
    hostname: slave02
    networks:
      gauss:
        ipv4_address: 10.8.0.12
    environment:
      TZ: Europe/Rome #Asia/Shanghai 时区
      GAUSS_USER: ${GAUSS_USER}
      GAUSS_PASSWORD: ${GAUSS_PASSWORD}
      NODE_NAME: datanode3
      RUN_MODE: "slave"
      HOST_NAMES: ${HOST_NAMES}
      HOST_IPS: ${HOST_IPS}
    volumes:
      - ./data/slave02/data:/opt/software/openGauss/data
      - ./data/slave02/logs:/opt/software/openGauss/logs
    depends_on:
      - master

  haproxy:
    image: lsqtzj/openeuler_haproxy:${HAPROXY_VERSION}
    build:
      context: .
      dockerfile: openeuler_haproxy/Dockerfile
    restart: always
    container_name: haproxy
    hostname: haproxy
    networks:
      gauss:
        ipv4_address: 10.8.0.19
    ports:
      - 7000:7000
    environment:
      TZ: Europe/Rome #Asia/Shanghai 时区
      ips: ${HAPROXY_IPS}
      ports: ${HAPROXY_PORTS}
    depends_on:
      - master


  pgadmin4:
    image: lsqtzj/openeuler_pgadmin4
    restart: always
    container_name: pgadmin4
    hostname: pgadmin4
    networks:
      gauss:
        ipv4_address: 10.8.0.18
    ports:
      - 9980:80
    environment:
      TZ: Europe/Rome #Asia/Shanghai 时区
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL} # pgadmin4管理员
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}         # pgadmin4管理员密码
    volumes:
      - ./data/pgadmin4/data:/var/lib/pgadmin4
      - ./data/pgadmin4/logs:/var/log/pgadmin4
    depends_on:
      - master

networks:
  gauss:
    driver: bridge
    ipam:
      config:
        - subnet: 10.8.0.0/16
          gateway: 10.8.0.1